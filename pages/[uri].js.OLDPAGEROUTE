import Head from 'next/head';
import Footer from '../components/Footer';
import { client } from '../lib/apollo';
import { gql } from '@apollo/client';
import parse from 'html-react-parser';

export default function SlugPage({ post }) {
	// const yoastHead = parse(post?.seo?.fullHead);
	return (
		<div>
			<Head>
				{/* {yoastHead} */}
			</Head>

			<main>
				<div className='siteHeader'>
					<h1 className='title'>{post.title}</h1>
					<p>
						‚úçÔ∏è &nbsp;&nbsp;
						{`${post.author.node.firstName} ${post.author.node.lastName}`}{' '}
						| üóìÔ∏è &nbsp;&nbsp;
						{new Date(post.date).toLocaleDateString()}
					</p>
				</div>
				<article
					dangerouslySetInnerHTML={{ __html: post.content }}
				></article>
			</main>

			{/* <Footer></Footer> */}
		</div>
	);
}
const GET_POST = gql`
	query GetPostByURI($id: ID!) {
		page(id: $id, idType: URI) {
			title
			content
			date
			author {
				node {
					firstName
					lastName
				}
			}
		}
	}
`;

export async function getStaticProps({ params }) {
	//  the params argument for this function corresponds to the dynamic URL segments
	//  we included in our page-based route. So, in this case, the `params` object will have
	//  a property named `uri` that contains that route segment when a user hits the page
	const response = await client.query({
		query: GET_POST,
		variables: {
			id: params.uri,
		},
	});
	// const response = await getPostByUri(params.uri)
	const post = response?.data?.page;
	return {
		props: {
			post,
		},
	};
}

export async function getStaticPaths() {
	const paths = [];
	return {
		paths,
		fallback: 'blocking',
	};
}
